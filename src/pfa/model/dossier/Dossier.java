package pfa.model.dossier;
// Generated 23 avr. 2016 02:24:37 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.*;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import pfa.model.users.Utilisateur;

/**
 * Dossier generated by hbm2java
 */
@Entity
@Inheritance(strategy = InheritanceType.JOINED)
@Table(name = "dossier",uniqueConstraints = {@UniqueConstraint(name = "uniqueRefAppro",columnNames = {"ref_appro"})})
public class Dossier  implements java.io.Serializable {

    //**************************************************************************************//       
    //**************************************************************************************//
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     
     @Column(name = "id_dossier")
     private int idDossier;
      
     
     @Column(length = 500)
     private String dossier = " ";
     
     @Column(name = "date_entree",nullable = true)
     @Temporal(TemporalType.DATE)
     private Date dateEntree;
     
     @Column(nullable = true,name = "date_sortie")
     @Temporal(TemporalType.DATE)
     private Date dateSortie;
     
     @Column(name = "ref_appro",length = 50,nullable = true)
     private String refAppro; 
     
     @Column(length = 100)
     private String programmation = " ";
     
     @Column(name = "date_creation",nullable = false)
     @Temporal(TemporalType.DATE)
     private Date dateCreation;
     
     @OneToMany(mappedBy ="dossier")
     @Cascade(value = {CascadeType.MERGE,CascadeType.REFRESH,CascadeType.PERSIST,CascadeType.SAVE_UPDATE})
     private List<Note> notes = new ArrayList<Note>();
     
     @OneToOne(mappedBy = "dossier",optional = true)
     private LettreAppro lettreAppro;
     
     @ManyToOne(optional = false)
     @JoinColumn(name = "id_avis",nullable = false,updatable = true)
     private Avis avis;
     
     @ManyToOne(optional = false)
     @Cascade(value = {CascadeType.MERGE,CascadeType.REFRESH,CascadeType.PERSIST,CascadeType.SAVE_UPDATE})
     @JoinColumn(name = "id_dpetl",nullable = false)
     private Dpetl dpetl;
     
     @ManyToOne(optional = false)
     @Cascade(value = {CascadeType.MERGE,CascadeType.REFRESH,CascadeType.PERSIST,CascadeType.SAVE_UPDATE})
     @JoinColumn(name = "id_nature",nullable = false)
     private Nature nature;
   
     @ManyToMany(mappedBy = "dossiers")
     @Cascade(value = {CascadeType.SAVE_UPDATE})
     private List<Utilisateur> responsables = new ArrayList<Utilisateur>();
    //**************************************************************************************//       
    //**************************************************************************************//
    public Dossier() {
    }

    public Dossier(String dossier, Date dateEntree, Date dateSortie, String refAppro, String programmation, Date dateCreation, List<Note> notes, LettreAppro lettreAppro, Avis avis, Dpetl dpetl, Nature nature) {
        this.dossier = dossier;
        this.dateEntree = dateEntree;
        this.dateSortie = dateSortie;
        this.refAppro = refAppro;
        this.programmation = programmation;
        this.dateCreation = dateCreation;
        this.notes = notes;
        this.lettreAppro = lettreAppro;
        this.avis = avis;
        this.dpetl = dpetl;
        this.nature = nature;
    }

    public Dossier(String dossier, Date dateEntree, String refAppro, String programmation, Date dateCreation, Avis avis, Dpetl dpetl, Nature nature) {
        this.dossier = dossier;
        this.dateEntree = dateEntree;
        this.refAppro = refAppro;
        this.programmation = programmation;
        this.dateCreation = dateCreation;
        this.avis = avis;
        this.dpetl = dpetl;
        this.nature = nature;
    }




    //**************************************************************************************//       
    //**************************************************************************************//
    public int getIdDossier() {
        return this.idDossier;
    }
    
    public void setIdDossier(int idDossier) {
        this.idDossier = idDossier;
    }
    public Avis getAvis() {
        return this.avis;
    }
    
    public void setAvis(Avis avis) {
        this.avis = avis;
    }
    public Dpetl getDpetl() {
        return this.dpetl;
    }
    
    public void setDpetl(Dpetl dpetl) {
        this.dpetl = dpetl;
    }
    public Nature getNature() {
        return this.nature;
    }
    
    public void setNature(Nature nature) {
        this.nature = nature;
    }

    public List<Utilisateur> getResponsables() {
        return responsables;
    }

    public void setResponsables(List<Utilisateur> responsables) {
        this.responsables = responsables;
    }

    

    public String getDossier() {
        return this.dossier;
    }
    
    public void setDossier(String dossier) {
        this.dossier = dossier;
    }
    public Date getDateEntree() {
        return this.dateEntree;
    }
    
    public void setDateEntree(Date dateEntree) {
        this.dateEntree = dateEntree;
    }
    public Date getDateSortie() {
        return this.dateSortie;
    }
    
    public void setDateSortie(Date dateSortie) {
        this.dateSortie = dateSortie;
    }
    public String getRefAppro() {
        return this.refAppro;
    }
    
    public void setRefAppro(String refAppro) {
        this.refAppro = refAppro;
    }
    public String getProgrammation() {
        return this.programmation;
    }
    
    public void setProgrammation(String programmation) {
        this.programmation = programmation;
    }


    public LettreAppro getLettreAppro() {
        return this.lettreAppro;
    }
    
    public void setLettreAppro(LettreAppro lettreAppro) {
        this.lettreAppro = lettreAppro;
    }

    public Date getDateCreation() {
        return dateCreation;
    }

    public void setDateCreation(Date dateCreation) {
        this.dateCreation = dateCreation;
    }

    public List<Note> getNotes() {
        return notes;
    }

    public void setNotes(List<Note> notes) {
        this.notes = notes;
    }
    
    //**************************************************************************************//       
    //**************************************************************************************//
    protected final void setPropertiesFromObject(Dossier dossier){
      if(dossier != null){
       this.idDossier = dossier.getIdDossier();
       this.avis = dossier.getAvis();
       this.dpetl = dossier.getDpetl();
       this.nature = dossier.getNature();
       this.responsables = dossier.getResponsables();
       this.dateEntree = dossier.getDateEntree();
       this.dateSortie = dossier.getDateSortie();
       this.refAppro = dossier.getRefAppro();
       this.programmation = dossier.getProgrammation();
       this.notes = dossier.getNotes();
       this.lettreAppro = dossier.getLettreAppro();
       this.dateCreation = dossier.getDateCreation();
      }  
    }
    //**************************************************************************************//       
    //**************************************************************************************//

}


