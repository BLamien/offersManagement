package pfa.model.users;
// Generated 23 avr. 2016 02:24:37 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.hibernate.annotations.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.Cascade;
import pfa.model.dossier.Dossier;
import pfa.model.dossier.LettreAppro;
import pfa.model.dossier.Note;

/**
 * Utilisateur generated by hbm2java
 */
@Entity
@Table(name = "utilisateur",uniqueConstraints = { @UniqueConstraint(columnNames = {"cin","password"})})
public class Utilisateur  implements java.io.Serializable {
    //**************************************************************************************//       
    //**************************************************************************************//
    @Id
    @Column(length = 50,name = "matricule")
     private String matricule;
     @Column(name = "sexe",nullable = false)
     private int idSexe;
     @Column(name = "situation_familiale",nullable = false)
     private int idSituationFamiliale;
     @Column(nullable = false)
     private String cin;
     @Column(nullable = false)
     private String nom;
     @Column(nullable = false)
     private String prenom;
     @Temporal(TemporalType.DATE)
     @Column(nullable = false,name = "date_naissance")
     private Date dateNaissance;
     private String email;
     private String tele;
     @Column(length = 25)
     private String password;
     @Transient
     private String sexe;
     @Transient
     private String situationFamiliale;
     
     
     @ManyToMany(fetch = FetchType.EAGER)
     @JoinTable(name = "utilisateur_dossier",joinColumns = @JoinColumn(name = "matricule",referencedColumnName = "matricule"),
             inverseJoinColumns =@JoinColumn(name = "id_dossier",referencedColumnName = "id_dossier"))
     @Cascade(value = {CascadeType.SAVE_UPDATE})
     private List<Dossier> dossiers = new ArrayList<Dossier>();
     
     @OneToMany(mappedBy = "utilisateur")
     @Cascade(value = {CascadeType.MERGE,CascadeType.REFRESH,CascadeType.SAVE_UPDATE})
     private List<Note> notes = new ArrayList<Note>();
     
     @OneToMany(mappedBy = "utilisateur")
     @Cascade(value = {CascadeType.MERGE,CascadeType.REFRESH,CascadeType.SAVE_UPDATE})
     private List<LettreAppro> lettreAppros = new ArrayList<LettreAppro>();
      
      @ManyToOne(optional = false)
      @JoinColumn(name = "id_profil",nullable = false)
      @Cascade(value = {CascadeType.MERGE,CascadeType.REFRESH,CascadeType.PERSIST,CascadeType.SAVE_UPDATE})
      private Profil profil;
    //**************************************************************************************//       
    //**************************************************************************************//
          public Utilisateur() {
    }
    public Utilisateur(String matricule, int idSexe, int idSituationFamiliale, String cin, String nom, String prenom, Date dateNaissance, String email, String tele, String password) {
        this.matricule = matricule;
        setIdSexe(idSexe);
        setIdSituationFamiliale(idSituationFamiliale);
        this.cin = cin;
        this.nom = nom;
        this.prenom = prenom;
        this.dateNaissance = dateNaissance;
        this.email = email;
        this.tele = tele;
        this.password = password;
    }
    //**************************************************************************************//       
    //**************************************************************************************// 
    public Utilisateur(String matricule, int idSexe, int idSituationFamiliale, String cin, String nom, String prenom, Date dateNaissance, 
            String email, String tele, String password,ArrayList<Dossier> dossiers,ArrayList<Note> notes,ArrayList<LettreAppro> lettreAppros) {
        this.matricule = matricule;
        setIdSexe(idSexe);
        setIdSituationFamiliale(idSituationFamiliale);
        this.cin = cin;
        this.nom = nom;
        this.prenom = prenom;
        this.dateNaissance = dateNaissance;
        this.email = email;
        this.tele = tele;
        this.password = password;
        this.notes = notes;
        this.dossiers = dossiers;
        this.lettreAppros = lettreAppros;
    }
    //**************************************************************************************//       
    //**************************************************************************************// 
    public void setDossiers(List<Dossier> dossiers) {
        this.dossiers = dossiers;
    }

    public ArrayList<Note> getNotes() {
        return (ArrayList<Note>) notes;
    }

    public void setNotes(List<Note> notes) {
        this.notes = notes;
    }

    public ArrayList<LettreAppro> getLettreAppros() {
        return (ArrayList<LettreAppro>) lettreAppros;
    }

    public void setLettreAppros(List<LettreAppro> lettreAppros) {
        this.lettreAppros =  lettreAppros;
    }
   
    public String getMatricule() {
        return this.matricule;
    }
    
    public void setMatricule(String matricule) {
        this.matricule = matricule;
    }

    public String getCin() {
        return this.cin;
    }
    
    public void setCin(String cin) {
        this.cin = cin;
    }
    public String getNom() {
        return this.nom;
    }
    
    public void setNom(String nom) {
        this.nom = nom;
    }
    public String getPrenom() {
        return this.prenom;
    }
    
    public void setPrenom(String prenom) {
        this.prenom = prenom;
    }
    public Date getDateNaissance() {
        return this.dateNaissance;
    }
    
    public void setDateNaissance(Date dateNaissance) {
        this.dateNaissance = dateNaissance;
    }
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    public String getTele() {
        return this.tele;
    }
    
    public void setTele(String tele) {
        this.tele = tele;
    }
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    public int getIdSexe() {
        return idSexe;
    }

    public final void setIdSexe(int idSexe) {
        this.idSexe = idSexe;
    }

    private String getSexeFromId(int idSexe) {
        if(idSexe == Sexe.HOMME.getIdSexe()){
            return Sexe.HOMME.getValue();
        }
        else if(idSexe == Sexe.FEMME.getIdSexe()){
            return  Sexe.FEMME.getValue();
        }
        else {
            throw new IllegalArgumentException();
        }
    }

    public Profil getProfil() {
        return profil;
    }

    public void setProfil(Profil profil) {
        this.profil = profil;
    }

    public int getIdSituationFamiliale() {
        return this.idSituationFamiliale;
    }

    public final void setIdSituationFamiliale(int idSituationFamiliale) {
        if(getSituationFamilialeFromId(idSituationFamiliale) != null)
        this.idSituationFamiliale = idSituationFamiliale;
        else
        throw new IllegalArgumentException();
    }
    
    

    private String getSituationFamilialeFromId(int idSituationFamiliale){
        if(idSituationFamiliale == SituationFamiliale.CELIBATAIRE.getIdSituation()){
            return SituationFamiliale.CELIBATAIRE.getValue();
        }
        else if (idSituationFamiliale == SituationFamiliale.MARIEE.getIdSituation()){
            return SituationFamiliale.MARIEE.getValue();
        }
        else{
            throw  new IllegalArgumentException();
        }
    }
    
    public String getSexe() {
        return getSexeFromId(this.idSexe);
    }

    public List<Dossier> getDossiers() {
        return dossiers;
    }


    public String getSituationFamiliale() {
        return getSituationFamilialeFromId(this.idSituationFamiliale);
    }

    public void setSituationFamiliale() {
        this.situationFamiliale = this.getSituationFamilialeFromId(this.idSituationFamiliale);
    }
    //**************************************************************************************//       
    //**************************************************************************************//
}


