package pfa.model.users;
// Generated 23 avr. 2016 02:24:37 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import org.hibernate.annotations.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.annotations.Cascade;
import pfa.model.dossier.Dossier;

/**
 * Profil generated by hbm2java
 */
@Entity
@Table(name = "profil")
public class Profil  implements java.io.Serializable {
    //**************************************************************************************//       
    //**************************************************************************************//
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id_profil")
     private Integer idProfil;
     @Column(length = 100)
     private String libele;
    
     @ManyToMany(fetch = FetchType.EAGER)
     @Cascade(value = {CascadeType.SAVE_UPDATE})
     private List<DroitAcces> droitAcceses;
     
     @OneToMany(mappedBy = "profil")
     @Cascade(value = {CascadeType.MERGE,CascadeType.REFRESH,CascadeType.PERSIST,CascadeType.SAVE_UPDATE})
     private List<Utilisateur> utilisateurs;
     
     @Transient
     private String droits;
     
     @Transient
     private String subDroits;
    //**************************************************************************************//       
    //**************************************************************************************//
    public Profil() {

    }

    public Profil(String libele) {
        this.libele = libele;
    }

    public Profil(String libele, List<DroitAcces> droitAcceses) {
       this.libele = libele;
       this.droitAcceses = droitAcceses;
    }
    //**************************************************************************************//       
    //**************************************************************************************//
    public Integer getIdProfil() {
        return this.idProfil;
    }
    
    public void setIdProfil(Integer idProfil) {
        this.idProfil = idProfil;
    }
    public String getLibele() {
        return this.libele;
    }
    
    public void setLibele(String libele) {
        this.libele = libele;
    }
    public List<DroitAcces> getDroitAcceses() {
        return this.droitAcceses;
    }
    
    public void setDroitAcceses(List<DroitAcces> droitAcceses) {
        this.droitAcceses = droitAcceses;
        this.setDroits(null);
        this.setSubDroits(null);
    }
    

    public List<Utilisateur> getUtilisateurs() {
        return utilisateurs;
    }

    public void setUtilisateurs(List<Utilisateur> utilisateurs) {
        this.utilisateurs = utilisateurs;
    }
    
    //**************************************************************************************//
    @Override
    public int hashCode() {
        int hash = 5;
        hash = 37 * hash + (this.idProfil != null ? this.idProfil.hashCode() : 0);
        hash = 37 * hash + (this.libele != null ? this.libele.hashCode() : 0);
        return hash;
    }
    //**************************************************************************************//       
    //**************************************************************************************//
    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Profil other = (Profil) obj;
        if (other.idProfil != this.idProfil) {
            if (this.idProfil == null || !this.idProfil.equals(other.idProfil)) {
                return false;
            }
        }
        return !((this.libele == null) ? (other.libele != null) : !this.libele.equals(other.libele));
    }
    //**************************************************************************************//       
    //**************************************************************************************// 
    public String getDroits() {
       this.setDroits(null);
       return this.droits;
    }
    //**************************************************************************************//       
    //**************************************************************************************// 
    public String getSubDroits() {
        this.setSubDroits(null);
        return this.subDroits;
    }
    //**************************************************************************************//       
    //**************************************************************************************// 
    public void setDroits(String droits) {
       this.droits = "";
       int i=0;
       if(getDroitAcceses() != null && this.getDroitAcceses().size() > 0){
           this.droits += this.getDroitAcceses().get(i).getLibele();
           for(i = 1;i<this.getDroitAcceses().size();i++)
           this.droits +=  " - " +this.getDroitAcceses().get(i).getLibele();
       }
    }
    //**************************************************************************************//       
    //**************************************************************************************// 
    public void setSubDroits(String subDroits) {
       if(this.getDroits().length() > 40)
           this.subDroits = this.getDroits().substring(0,40);
       else{
           this.subDroits =  this.getDroits();
       }
       
    }
    //**************************************************************************************//       
    //**************************************************************************************//  
 
}


